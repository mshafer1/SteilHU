//this program looks for a word within a c-style string

#include<iostream>
#include<cstring>

using std::cout;
using std::cin;
using std::endl;

const int SIZE = 101;

int main()
{
	char phrase[SIZE] = "";
	char word[SIZE]= "";

	cout << "Enter a phrase> ";
	cin.getline(phrase, SIZE);

	int wordIndex = 0;
	//loop through all of the characters in the phrase
	//I used an unsigned int for phraseIndex because that is what the strlen function returns
	for(unsigned int phraseIndex = 0; phraseIndex <= strlen(phrase); phraseIndex++)
	{
		//copy the next character from the phrase into the next available spot in the word
		word[wordIndex] = phrase[phraseIndex];

		//when the character that was just copied from the phrase was a space or the null terminator
		//the end of the word was found
		if(word[wordIndex] == ' ' || word[wordIndex] == '\0')
		{
			//terminate the word with the null character
			word[wordIndex] = '\0';

			//display the word on its own line
			//this is where you should modify the word and append it to the end of the pig-latin phrase
			cout << word << endl;

			//move the wordIndex back to 0 to get ready for the next word
			wordIndex = 0;
		}
		else
		{
			//only increment the wordIndex when there are still characters put put in the current word
			wordIndex++;
		}
	}
    cin.get();
    return 0;
}
